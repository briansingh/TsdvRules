"use strict";var tsdvrules=angular.module("tsdvrules",["ngAnimate","ngCookies","ngTouch","ngSanitize","ngResource","ui.router","firebase","ui.grid","ui.grid.edit","ui.grid.cellNav"]);angular.module("tsdvrules").constant("firebaseUrl","https://bstsdvrules.firebaseio.com/"),tsdvrules.config(["$stateProvider","$urlRouterProvider",function(e,o){e.state("home",{url:"/",templateUrl:"app/main/main.html",controller:"MainCtrl as mainCtrl",resolve:{user:["AuthService",function(e){return e.requireUser()}]}}).state("login",{url:"/login?redirect",templateUrl:"app/login/login.html",controller:"LoginCtrl as loginCtrl"}).state("profile",{url:"/profile",templateUrl:"app/profile/profile.html",controller:"ProfileCtrl as profileCtrl"}).state("graphs",{url:"/graphs",templateUrl:"app/graphs/graphs.html",controller:"GraphsCtrl as graphsCtrl"}).state("admin",{url:"/admin",templateUrl:"app/admin/admin.html",controller:"AdminCtrl as adminCtrl",resolve:{user:["AuthService","UserService","$q",function(e,o,t){var r=t.defer();return e.requireUser().then(function(e){return o.getById(e.uid)}).then(function(e){e.roles.admin?r.resolve():r.reject("ADMIN_REQUIRED")}).catch(function(e){r.reject(e)}),r.promise}]}}).state("admin.users",{url:"/users",templateUrl:"app/admin/users/users.html",controller:"AdminUsersCtrl as adminUsersCtrl"}).state("contact",{url:"/contact",templateUrl:"app/contact/contact.html",controller:"ContactCtrl as contactCtrl"}),o.otherwise("/")}]),tsdvrules.run(["$rootScope","$log","$state",function(e,o,t){e.$on("$stateChangeError",function(e,r,n,a,s,l){o.log("$stateChangeError",e,r,n,a,s,l),"AUTH_REQUIRED"===l&&(o.log("$stateChangeError, redirecting to login",r.name),t.go("login",{redirect:r.name}))})}]),tsdvrules.controller("GlobalCtrl",["AuthService","$log","$state","ProfileFireService","UserService",function(e,o,t,r,n){var a=this;e.onAuth(function(e){o.log("AuthService.onAuth",e),a.user=e,e&&(a.user.name=e.uid,r.getProfileName(e.uid).then(function(e){a.user.name=e})),e&&n.getById(e.uid).then(function(e){a.userData=e,o.log("UserService.getById user retrieved",a.userData)})}),o.log("User is ",this.user),a.logout=function(){e.logout().then(function(){o.log("GlobalCtrl AuthService.logout"),t.go("home")})},a.globalObject={message:"Global"}}]),angular.module("tsdvrules").factory("AuthService",["$window","$log","$q","$firebase","$firebaseAuth","firebaseUrl",function(e,o,t,r,n,a){var s=new e.Firebase(a),l=n(s),i={};return i.onAuth=function(e){l.$onAuth(function(t){o.log("AuthService $onAuth callback",t),e(t)})},i.createUser=function(e,t){return l.$createUser(e,t).then(function(){return o.log("auth.$createUser succeeded"),i.login({email:e,password:t})})},i.getUser=function(){return l.$waitForAuth()},i.requireUser=function(){return l.$requireAuth()},i.getUserSync=function(){return l.$getAuth()},i.login=function(n,s){var i=t.defer();return l.$authWithPassword({email:n,password:s}).then(function(t){var n=new e.Firebase(a+"/users/"+t.uid+"/profile"),s=r(n).$asObject();s.uid=t.uid,s.email=t.password.email,s.$save().then(function(){o.log("user profile saved"),i.resolve(t)})}).catch(function(e){i.reject(e)}),i.promise},i.logout=function(){l.$unauth()},i}]),angular.module("tsdvrules").factory("UserService",["$window","$log","$q","$timeout","$firebase","firebaseUrl",function(e,o,t,r,n,a){return o.log("UserService instantiated"),{getById:function(e){var r=t.defer(),s=new Firebase(a+"users/"+e),l=n(s);return l.$asObject().$loaded().then(function(e){o.log("UserService.getById loaded",e),r.resolve(e)}).catch(function(e){o.log("Error retrieving user from firebase",e)}),r.promise},get:function(){var e=t.defer(),r=new Firebase(a+"users/"),s=n(r);return s.$asArray().$loaded().then(function(t){o.log("UserService.get loaded",t),e.resolve(t)}).catch(function(e){o.log("Error retrieving user from firebase",e)}),e.promise}}}]),angular.module("tsdvrules").factory("ProfileFireService",["$window","$log","$q","$timeout","$firebase","firebaseUrl","$http",function(e,o,t,r,n,a,s){o.log("ProfileFireService instantiated");var l,i,d=new Firebase(a);return{getProfileName:function(e){var r=t.defer();return s.get(a+"users/"+e+"/name.json").success(function(e){o.log("ProfileFireService getProfileName success",e),r.resolve(e)}).error(function(e){o.log("ProfileFireService getProfileName error",e),r.reject(e)}),r.promise},setProfileName:function(e,o){var t=new Firebase(a+"users/"+e);t.update({name:o})},resetProfilePassword:function(e,t){d.resetPassword({email:e},function(e){l=null===e?"Password reset email sent successfully":"Error sending password reset email: "+e,o.log(l),t(l)})},deleteProfile:function(e,t,r){d.removeUser({email:e,password:t},function(e){if(e){switch(e.code){case"INVALID_USER":l="The specified user account does not exist.";break;case"INVALID_PASSWORD":l="The specified user account password is incorrect.";break;default:l="Error removing user: "+e}i=!1}else l="User removed successfully",i=!0;o.log(l),r({message:l,redirect:i})})}}}]),angular.module("tsdvrules").factory("TodoFireService",["$window","$log","$q","$timeout","$firebase","firebaseUrl",function(e,o,t,r,n,a){o.log("TodoFireService instantiated");var s,l=function(){};return l(),{getTodos:function(e){var r=t.defer(),l=new Firebase(a+"users/"+e.uid+"/todos"),i=n(l);return i.$asArray().$loaded().then(function(e){s=e,o.log("todos loaded",s===e,e),r.resolve(s)}).catch(function(e){o.log("Error retrieving todos from firebase",e)}),r.promise},addTodo:function(e){var r=t.defer();return s.$add({title:e.title,completed:!1}).then(function(e){o.log("new todo added",e.$id,e.key(),e,s),o.log("resolving addTodo promise"),r.resolve(e)}).catch(function(e){console.log("error adding todo",e),o.log("rejecting addTodo promise"),r.reject(e)}),r.promise},removeTodo:function(e){var r=t.defer();return s.$remove(e).then(function(e){o.log("resolving removeTodo promise"),r.resolve(e)}).catch(function(e){o.log("error removing todo",e),o.log("rejecting removeTodo promise"),r.reject(e)}),r.promise},saveTodo:function(e){var r=t.defer();return s.$save(e).then(function(e){o.log("resolving saveTodo promise"),r.resolve(e)}).catch(function(e){o.log("error saving todo",e),o.log("rejecting saveTodo promise"),r.reject(e)}),r.promise}}}]),angular.module("tsdvrules").factory("TodoService",["$window","$log","$q","$timeout","$http","firebaseUrl",function(e,o,t,r,n,a){o.log("TodoService instantiated");var s;return{getTodos:function(){var e=t.defer();return n.get(a+"todos.json").success(function(t){o.log("TodoService getTodos success",t),s=Object.keys(t).map(function(e){var o=t[e];return o.$id=e,o}),o.log("TodoService getTodos mapping",s),e.resolve(s)}).error(function(t){o.log("TodoService getTodos error",t),e.reject(t)}),e.promise},addTodo:function(e){var r=t.defer(),l=angular.copy(e);return n.post(a+"todos.json",l).success(function(e){o.log("TodoService addTodo success",e),l.$id=e.name,s.push(l),r.resolve(l)}).error(function(e){o.log("TodoService addTodo error",e),r.reject(e)}),r.promise},removeTodo:function(e){var r=t.defer();return n.delete(a+"todos/"+e.$id+".json").success(function(t){o.log("TodoService removeTodo success",t),s.splice(s.indexOf(e),1),r.resolve()}).error(function(e){o.log("TodoService removeTodo error",e),r.reject(e)}),r.promise},saveTodo:function(e){var r=t.defer(),s=angular.copy(e);return s.$id=void 0,n.put(a+"todos/"+e.$id+".json",s).success(function(t){o.log("TodoService saveTodo success",t),r.resolve(e)}).error(function(e){o.log("TodoService saveTodo error",e),r.reject(e)}),r.promise}}}]),angular.module("tsdvrules").factory("Todo",["$resource","$log","firebaseUrl",function(e,o,t){return o.log("Todo instantiated"),e(t+"todos/:id",{id:"@$id"},{query:{isArray:!0,url:t+"todos.json",transformResponse:function(e){o.log("Todo query response",e);var t=angular.fromJson(e),r=Object.keys(t).map(function(e){var o=t[e];return o.$id=e,o});return r}},get:{url:t+"todos/:id.json"},add:{method:"POST",url:t+"todos.json",transformResponse:function(e){return o.log("Todo add transformResponse",e,this),angular.fromJson(e)}},save:{url:t+"todos/:id.json",method:"PUT",transformRequest:function(e){o.log("Todo save transformResponse",e,this);var t=angular.copy(e);return t.$id=void 0,angular.toJson(t)}},update:{url:t+"todos/:id.json",method:"PUT",transformRequest:function(e){o.log("Todo update transformResponse",e,this);var t=angular.copy(e);return t.$id=void 0,angular.toJson(t)}},remove:{url:t+"todos/:id.json",method:"DELETE"}})}]),angular.module("tsdvrules").directive("ajstTodoList",function(){return{templateUrl:"components/todo-list/todo-list.html",transclude:!0,scope:{onGetTodos:"&",onRemoveTodo:"&",onSaveTodo:"&",newTodoTitle:"=",user:"="},controllerAs:"ajstTodoListCtrl",controller:["$scope","$element","$attrs","$transclude","$log","TodoFireService",function(e,o,t,r,n,a){n.log("ajstTodoList controller instantiated");var s=this;s.getTodos=function(){return a.getTodos(e.user).then(function(o){return s.todos=o,n.log("ajstTodoList calling $scope.onGetTodos()"),e.onGetTodos({todos:s.todos}),s.todos})},s.removeTodo=function(o){return a.removeTodo(o).then(function(){n.log("ajstTodoList calling $scope.onRemoveTodo()"),e.onRemoveTodo({todo:o})})},s.getTodoClasses=function(e){return{completed:e.completed}},s.saveTodo=function(o){return a.saveTodo(o).then(function(){n.log("ajstTodoList calling $scope.onSaveTodo()"),e.onSaveTodo({todo:o})})},s.getTodos()}]}}),angular.module("tsdvrules").controller("AdminCtrl",["$scope","$log","$window",function(e,o){o.log("AdminCtrl instantiated")}]),angular.module("tsdvrules").controller("AdminUsersCtrl",["$scope","$log","$window","UserService",function(e,o,t,r){o.log("AdminUsersCtrl instantiated");var n=this;n.uiGridOptions={enableCellEditOnFocus:!0,columnDefs:[{name:"$id",displayName:"User Id",enableCellEdit:!1},{name:"profile.email",enableCellEdit:!1},{name:"roles.admin",displayName:"Admin",type:"boolean"},{name:"todosCount",displayName:"Number of Todos",field:"getTodosCount()",enableCellEdit:!1}],onRegisterApi:function(o){n.gridApi=o,o.edit.on.afterCellEdit(e,n.saveCell)}},n.saveCell=function(t,r,a,s){o.log("gridApi.edit.on.afterCellEdit",t,r,a,s),n.users.$save(t),e.$apply()};var a=function(){return this.todos?Object.keys(this.todos).length:0};r.get().then(function(e){n.users=e,n.users.forEach(function(e){e.getTodosCount=a}),n.uiGridOptions.data=n.users}).catch(function(e){o.log("AdminUsersCtrl error on UserService.get",e)})}]),angular.module("tsdvrules").controller("LoginCtrl",["$scope","$state","$stateParams","$log","AuthService","ProfileFireService",function(e,o,t,r,n,a){var s=this;s.mode="Login",s.err=null,r.log("LoginCtrl instantiated, redirect",t.redirect),s.submit=function(){return s.err=null,void 0==s.email?(s.err={message:"Please enter email"},!1):"ResetPassword"===s.mode?(a.resetProfilePassword(s.email,function(e){s.err={message:e};var o=angular.element($("#ErrorMessage"));o.scope().$apply()}),!1):void 0==s.password?(s.err={message:"Please enter password"},!1):void n["Login"===s.mode?"login":"createUser"](s.email,s.password).then(function(e){r.log("AuthService "+s.mode+" succeeded, redirecting",e),o.go(t.redirect||"/home")},function(e){r.log("AuthService.login failed",e),s.err=e})};var l=n.getUserSync();l&&o.go(t.redirect||"/home")}]),angular.module("tsdvrules").controller("MainCtrl",["$scope","$log","$q","TodoFireService",function(e,o,t,r){o.log("MainCtrl instantiated");var n=this;n.newTodoTitle="",n.addTodo=function(e){var o;return r.addTodo(e).then(function(e){o=e,n.newTodoTitle=""},function(e){console.log(e)})},n.onGetTodos=function(e){o.log("MainCtrl.onGetTodos called",e)},n.onRemoveTodo=function(e){o.log("MainCtrl.onRemoveTodo called",e)},n.onSaveTodo=function(e){o.log("MainCtrl.onSaveTodo called",e)}}]),angular.module("tsdvrules").controller("GraphsCtrl",["$scope","$log","$window",function(e,o,t){o.log("$window.moment",t.moment);var r=this;r.todos=[];var n={title:"Sample title ",completed:!1,createdAt:void 0,completedAt:void 0},a=function(e,o){return Math.floor(Math.random()*(o-e))+e},s=function(e){var o=angular.copy(n);return o.title=e,o.createdAt=t.moment().subtract(a(1,30),"days").toDate(),o.completedAt=t.moment(o.createdAt).add(a(1,5),"days").toDate(),o.completed=!0,o.completedAt.valueOf()>Date.now()&&(o.completedAt=void 0,o.completed=!1),o};r.generateData=function(){r.todos=[];for(var e=0;100>e;e++)r.todos.push(s("Sample title "+e))},r.generateData()}]),angular.module("tsdvrules").directive("ajstTodoGraph",["$window","$log",function(e,o){return{restrict:"E",template:'<div class="ajst-todo-graph"><h2>Number of todos by creation date</h2></div>',scope:{todos:"="},replace:!0,link:function(t,r){var n={top:30,right:30,bottom:30,left:30},a=30,s=$(r[0]).width()-2*a,l=s,i=(d3.scale.category20c(),function(){r.find("svg").remove();{var a=d3.nest().key(function(o){return e.moment(o.createdAt).startOf("day").toDate().toString()}).rollup(function(e){return{numCreated:e.length}}).entries(t.todos);d3.nest().key(function(o){return e.moment(o.completedAt).startOf("day").toDate().toString()}).rollup(function(e){return{numCompleted:e.length}}).entries(t.todos)}o.log("dataByCreatedAt",a);var i=d3.select(r[0]).append("svg").attr("width",s).attr("height",l).append("g").attr("transform","translate("+n.left+","+n.top+")"),d=d3.time.scale().range([0,s]).domain([d3.min(t.todos,function(e){return e.createdAt.valueOf()}),d3.max(t.todos,function(e){return e.createdAt.valueOf()})]),u=d3.scale.linear().range([l,0]).domain([0,d3.max(a,function(e){return e.values.numCreated})]),c=d3.svg.axis().scale(d).orient("bottom"),g=d3.svg.axis().scale(u).orient("left"),m=(i.append("g").attr("class","x axis").attr("transform","translate(0,"+l+")").call(c),i.append("g").attr("class","y axis").attr("transform","translate(-"+n.left+",0)").call(g),i.selectAll(".date").data(a).enter().append("g").attr("class","g date").attr("transform",function(e){return"translate("+d(new Date(e.key))+",0)"}));m.append("rect").attr("width",20).attr("y",function(e){return u(e.values.numCreated)}).attr("height",function(e){return l-u(e.values.numCreated)}).style("fill","#a05d56  ")});t.$watch("todos",function(e){o.log("scope.todos changed",e),i()},!0)}}}]),angular.module("tsdvrules").controller("ContactCtrl",["$scope",function(){console.log("ContactCtrl instantiated")}]),angular.module("tsdvrules").controller("ProfileCtrl",["$scope","$state","$stateParams","$log","ProfileFireService",function(e,o,t,r,n){r.log("ProfileCtrl instantiated");var a=this;a.mode="Edit",a.err=null,a.submit=function(e,t,r){return a.err=null,void 0==t?(a.err={message:"Please enter name"},!1):void 0==r?(a.err={message:"Please enter email"},!1):void 0==a.password?(a.err={message:"Please enter password"},!1):("Edit"===a.mode&&n.setProfileName(e,t),"Delete"===a.mode?(n.deleteProfile(r,a.password,function(e){if(a.err={message:e.message},e.redirect)o.go("home");else{var t=angular.element($("#ErrorMessage"));t.scope().$apply()}}),!1):void 0)}}]),angular.module("tsdvrules").controller("NavbarCtrl",["$scope",function(e){e.date=new Date}]),function(e){try{e=angular.module("tsdvrules")}catch(o){e=angular.module("tsdvrules",[])}e.run(["$templateCache",function(e){e.put("app/admin/admin.html",'<div class="container admin-page"><h1>You are an administrator! I\'m so proud.</h1><a ui-sref="admin.users">Users</a><ui-view></ui-view></div>')}])}(),function(e){try{e=angular.module("tsdvrules")}catch(o){e=angular.module("tsdvrules",[])}e.run(["$templateCache",function(e){e.put("app/contact/contact.html",'<div class="container"><h1>Contact</h1><img src="../../assets/images/voyager-graphic2.jpg"></div>')}])}(),function(e){try{e=angular.module("tsdvrules")}catch(o){e=angular.module("tsdvrules",[])}e.run(["$templateCache",function(e){e.put("app/graphs/graphs.html",'<div class="container graphs-page"><h1>Graphs with D3</h1><button ng-click="graphsCtrl.generateData()">Generate new data</button><div class="row"><div class="col-md-12"><ajst-todo-graph todos="graphsCtrl.todos"></ajst-todo-graph></div></div></div>')}])}(),function(e){try{e=angular.module("tsdvrules")}catch(o){e=angular.module("tsdvrules",[])}e.run(["$templateCache",function(e){e.put("app/login/login.html",'<div class="container login-page"><h4 id="ErrorMessage" class="row">{{loginCtrl.err.message}}</h4><h1 class="row">{{loginCtrl.mode}}</h1><h2>{{globalCtrl.user}}</h2><form ng-submit="loginCtrl.submit()" class="row"><div class="form-group"><label for="">Email address</label> <input type="email" class="form-control" placeholder="Email" ng-model="loginCtrl.email"></div><div class="form-group" ng-show="loginCtrl.mode!=\'ResetPassword\'"><label>Password</label> <input type="password" class="form-control" placeholder="Password" ng-model="loginCtrl.password"></div><button type="submit" class="btn btn-default">{{loginCtrl.mode}}</button></form><p class="row" ng-show="loginCtrl.mode==\'Login\'"><button type="button" class="btn btn-link" ng-click="loginCtrl.mode=\'Register\'">Register new account</button></p><p class="row" ng-show="loginCtrl.mode==\'Login\'"><button type="button" class="btn btn-link" ng-click="loginCtrl.mode=\'ResetPassword\'">Reset password</button></p></div>')}])}(),function(e){try{e=angular.module("tsdvrules")}catch(o){e=angular.module("tsdvrules",[])}e.run(["$templateCache",function(e){e.put("app/main/main.html",'<div class="container"><h1>Todo</h1><div class="row"><div class="col-md-12"><form ng-submit="mainCtrl.addTodo({ title : mainCtrl.newTodoTitle })"><input type="text" class="form-control" ng-model="mainCtrl.newTodoTitle" placeholder="Type title here"></form></div></div><div class="row"><div class="col-md-12"><ajst-todo-list on-get-todos="mainCtrl.onGetTodos(todos)" on-remove-todo="mainCtrl.onRemoveTodo(todo)" on-save-todo="mainCtrl.onSaveTodo(todo)" new-todo-title="mainCtrl.newTodoTitle" user="globalCtrl.user"><h2>First todo list</h2><div>Going to add a new todo with the title "{{mainCtrl.newTodoTitle}}"</div></ajst-todo-list></div></div></div>')}])}(),function(e){try{e=angular.module("tsdvrules")}catch(o){e=angular.module("tsdvrules",[])}e.run(["$templateCache",function(e){e.put("app/profile/profile.html",'<div class="container"><h4 id="ErrorMessage" class="row">{{profileCtrl.err.message}}</h4><h1>Profile</h1><h1 class="row">{{profileCtrl.mode}}</h1><form ng-submit="profileCtrl.submit(globalCtrl.user.uid, globalCtrl.user.name, globalCtrl.user.password.email)" class="row"><div class="form-group" ng-show="profileCtrl.mode==\'Edit\'"><label for="">User Name</label> <input type="name" class="form-control" placeholder="Name" ng-model="globalCtrl.user.name"></div><div class="form-group"><label for="">Email address</label> <input type="email" class="form-control" placeholder="Email" ng-model="globalCtrl.user.password.email"></div><div class="form-group"><label>Password</label> <input type="password" class="form-control" placeholder="Password" ng-model="profileCtrl.password"></div><button type="submit" class="btn btn-default">{{profileCtrl.mode}}</button></form><p class="row"><button type="button" class="btn btn-link" ng-click="profileCtrl.mode=\'Edit\'">Edit profile</button></p><p class="row"><button type="button" class="btn btn-link" ng-click="profileCtrl.mode=\'Delete\'">Delete profile</button></p></div>')}])}(),function(e){try{e=angular.module("tsdvrules")}catch(o){e=angular.module("tsdvrules",[])}e.run(["$templateCache",function(e){e.put("components/navbar/navbar.html",'<nav class="navbar navbar-default" ng-controller="NavbarCtrl"><div class="navbar-header"><a class="navbar-brand" href="https://github.com/Swiip/generator-gulp-angular"><span class="glyphicon glyphicon-home"></span> Gulp Angular</a></div><div class="collapse navbar-collapse" id="bs-example-navbar-collapse-6"><ul class="nav navbar-nav"><li class="active"><a ui-sref="home">Home</a></li><li><a ng-href="#">About</a></li><li><a ui-sref="graphs">Graphs</a></li><li><a ui-sref="contact">Contact</a></li><li ng-show="globalCtrl.userData.roles.admin"><a ui-sref="admin">Admin</a></li><li><a ui-sref="login" ng-hide="globalCtrl.user">Log In</a></li><li><a ng-href="#" ng-show="globalCtrl.user" ng-click="globalCtrl.logout()">Log Out</a></li><li><a ui-sref="profile" ng-show="globalCtrl.user">Profile</a></li></ul><ul class="nav navbar-nav navbar-center"><li>Current user: {{ globalCtrl.user.name }}</li></ul><ul class="nav navbar-nav navbar-right"><li>Current date: {{ date | date:\'yyyy-MM-dd\' }}</li></ul></div></nav>')}])}(),function(e){try{e=angular.module("tsdvrules")}catch(o){e=angular.module("tsdvrules",[])}e.run(["$templateCache",function(e){e.put("components/todo-list/todo-list.html",'<ng-transclude></ng-transclude><div>Inside directive template, new todo title: {{newTodoTitle}}<br><span ng-bind="newTodoTitle"></span><br><input ng-model="newTodoTitle" type="text"></div><ul class="todos"><li class="todo-item slide-animation" ng-repeat="todo in ajstTodoListCtrl.todos track by todo.$id" ng-class="ajstTodoListCtrl.getToDoClasses(todo)"><div class="input-group"><span class="input-group-addon"><input type="checkbox" ng-model="todo.completed" ng-change="ajstTodoListCtrl.saveTodo(todo)"></span> <input type="text" class="form-control" ng-model="todo.title" ng-change="ajstTodoListCtrl.saveTodo(todo)"> <span class="input-group-btn"><button class="btn btn-default" ng-click="ajstTodoListCtrl.removeTodo(todo)"><span class="glyphicon glyphicon-remove-circle"><span class="sr-only">Remove</span></span></button></span></div></li></ul>')}])}(),function(e){try{e=angular.module("tsdvrules")}catch(o){e=angular.module("tsdvrules",[])}e.run(["$templateCache",function(e){e.put("app/admin/users/users.html",'<div class="row"><div class="col-md-12"><h2>Users</h2><div class="user-grid" ui-grid="adminUsersCtrl.uiGridOptions" ui-grid-edit="" ui-grid-cellnav=""></div></div></div>')}])}();